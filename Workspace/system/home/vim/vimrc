" Copyright (c) 2017 Ayoume Inc.
" All rights reserved.
"
" "Vim Options" version 1.0
"
" Redistribution and use in source and binary forms, with or without
" modification, are permitted provided that the following conditions are
" met:
"
"    * Redistributions of source code must retain the above copyright
" notice, this list of conditions and the following disclaimer.
"    * Redistributions in binary form must reproduce the above
" copyright notice, this list of conditions and the following disclaimer
" in the documentation and/or other materials provided with the
" distribution.
"    * Neither the name of Ayoume Inc. nor the names of its
" contributors may be used to endorse or promote products derived from
" this software without specific prior written permission.
"
" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
" OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
" LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
" OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
"
" ---
" Author: Zich
" E-mail: zichoole@gmail.com
" Date  : 2017-05-27 12:20:00
"
" ---
" Description:
"   Options for vim editor.
"
" ---
" Sample:
"   http://edyfox.codecarver.org/html/_vimrc_for_beginners.html
"
"************************************************************************


"************************************************************************
"
" Global settings.
"
"************************************************************************

" Negative operations of vi.
set nocp
" Active ruler of vim.
set ru
" Active realtime search.
set is
" Highlight searched keywords.
set hls
" Backspace settings.
set backspace=indent,eol,start
" Cursor settings.
set whichwrap=b,s,<,>,[,],h,l,~
" Encoding settings.
set encoding=utf-8
" Use menu of english.
set langmenu=en_US.UTF-8
" Use message of english.
language message en_US.UTF-8
" Set auto recognition of fileencodings.
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
" Show special characters.
"set ambiwidth=double
" Set width of indent.
set sw=4
" Set width of tab.
set ts=4
" Replace tab to whitespace.
set et
" Delete tab by once backspace.
set smarttab
" Use spell checker.
"set spell
" Enable the syntax.
syntax on
" Enable filetype indent.
filetype plugin indent on
" Open the target line last opened.
if has("autocmd")
    au BufReadPost *
        \ if line("'\"") > 1 && line("'\"")
        \ <= line("$") | exe "normal! g'\"" | endif
endif
" Use 256 color.
set t_Co=256
" Show line number.
set number
" Show horizontal line of cursor.
set cursorline
" Show vertical line of cursor.
set cursorcolumn
" Show white characters.
set list
" Map of white characters.
set listchars=tab:>-,trail:-

let python_highlight_all=1

" Split navigations.
set splitbelow
set splitright
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Enable mouse actions.
"set mouse=a
"nmap <LeftMouse> <nop>
"imap <LeftMouse> <nop>
"vmap <LeftMouse> <nop>
"nmap <2-LeftMouse> <nop>


"************************************************************************

" TODO: To delete if repaired.
if has('python3')
  silent! python3 1
endif

"************************************************************************
"
" Color schemes.
"
"************************************************************************
colorscheme zichoole


"************************************************************************
"
" Vundle settings.
"
"************************************************************************
" Be iMproved, required.
set nocompatible
" Required.
filetype off
" Set the runtime path to include Vundle and initialize.
set rtp+=~/.vim/bundle/Vundle.vim

" All of your Plugins must be added after the following line.
call vundle#begin()
" Alternatively, pass a path where Vundle should install plugins.
"call vundle#begin('~/some/path/here')

" Let Vundle manage Vundle, required
Bundle 'gmarik/vundle'

"--------------------------------TagList---------------------------------
Bundle 'taglist.vim'
let Tlist_Ctags_Cmd='ctags'
let Tlist_Show_One_File=1
let Tlist_WinWidt=36
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Right_Window=1
nnoremap <C-T> :TlistToggle<CR>
"------------------------------------------------------------------------

"--------------------------------NERDTree--------------------------------
Bundle 'scrooloose/nerdtree'
let NERDTreeWinPos='left'
let NERDTreeWinSize=36
nnoremap <C-N> :NERDTreeToggle<CR>
"------------------------------------------------------------------------

"--------------------------vim-nerdtree-tabs-----------------------------
Bundle "jistr/vim-nerdtree-tabs"
" Ignore files in NERDTree.
let NERDTreeIgnore=['\.pyc$', '\~$']
"------------------------------------------------------------------------

"--------------------------------ctrlp.vim-------------------------------
Bundle "kien/ctrlp.vim"
"------------------------------------------------------------------------

"--------------------------------Airline---------------------------------
Bundle 'bling/vim-airline'
Bundle 'vim-airline/vim-airline-themes'
" After installing, run: cd fonts && install.sh
Bundle 'powerline/fonts'
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#buffer_nr_show=1
let g:airline_powerline_fonts=1
let g:airline_theme='badwolf'
let g:airline#extensions#whitespace#enabled=0
let g:airline#extensions#whitespace#symbol='!'
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
"let g:airline_left_sep = '¬ª'
"let g:airline_left_sep = '‚ñ∂'
"let g:airline_right_sep = '¬´'
"let g:airline_right_sep = '‚óÄ'
"let g:airline_symbols.crypt = 'üîí'
"let g:airline_symbols.linenr = '‚êä'
"let g:airline_symbols.linenr = '‚ê§'
"let g:airline_symbols.linenr = '¬∂'
"let g:airline_symbols.maxlinenr = '‚ò∞'
"let g:airline_symbols.maxlinenr = ''
"let g:airline_symbols.branch = '‚éá'
"let g:airline_symbols.paste = 'œÅ'
"let g:airline_symbols.paste = '√û'
"let g:airline_symbols.paste = '‚à•'
"let g:airline_symbols.spell = 'Íû®'
"let g:airline_symbols.notexists = '‚àÑ'
"let g:airline_symbols.whitespace = 'Œû'

" powerline symbols
let g:airline_left_sep = 'ÓÇ∞'
let g:airline_left_alt_sep = 'ÓÇ±'
let g:airline_right_sep = 'ÓÇ≤'
let g:airline_right_alt_sep = 'ÓÇ≥'
let g:airline_symbols.branch = 'ÓÇ†'
let g:airline_symbols.readonly = 'ÓÇ¢'
let g:airline_symbols.linenr = 'ÓÇ°'

" old vim-powerline symbols
"let g:airline_left_sep = '‚ÆÄ'
"let g:airline_left_alt_sep = '‚ÆÅ'
"let g:airline_right_sep = '‚ÆÇ'
"let g:airline_right_alt_sep = '‚ÆÉ'
"let g:airline_symbols.branch = '‚≠†'
"let g:airline_symbols.readonly = '‚≠§'
"let g:airline_symbols.linenr = '‚≠°'

set laststatus=2
set guifont=Source\ Code\ Pro\ for\ Powerline:h14

nnoremap <C-tab> :bn<CR>
nnoremap <C-s-tab> :bp<CR>
"------------------------------------------------------------------------

"--------------------------------bufexplorer-----------------------------
Bundle 'jlanzarotta/bufexplorer'
let g:bufExplorerDefaultHelp=0
let g:bufExplorerShowRelativePath=1
let g:bufExplorerSortBy='mru'
let g:bufExplorerSplitRight=0
let g:bufExplorerSplitVertical=1
let g:bufExplorerSplitVertSize=36
let g:bufExplorerUseCurrentWindow=1
autocmd BufWinEnter \[Buf\ List\] setl nonumber
nnoremap <C-B> :BufExplorerVerticalSplit<CR>
nnoremap <C-D> :ToggleBufExplorer<CR>
"------------------------------------------------------------------------

"--------------------------------YouCompleteMe---------------------------
" After installing, run:
"   1. cd ~/.vim/bundle/YouCompleteMe
"   2. ./install --all
Bundle "Valloric/YouCompleteMe"
"let g:ycm_server_python_interpreter="/Users/Zichoole/.pyenv/shims/python"
"let g:ycm_global_ycm_extra_conf='~/.vim/.ycm_extra_conf.py'
"let g:ycm_autoclose_preview_window_after_completion = 1
"nnoremap <leader>jd :YcmCompleter GoToDefinitionElseDeclaration<CR>
"set completeopt=longest,menu
"autocmd InsertLeave * if pumvisible() == 0|pclose|endif
"inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<CR>"
"inoremap <expr> <Down> pumvisible() ? "\<C-n>" : "\<Down>"
"inoremap <expr> <Up> pumvisible() ? "\<C-p>" : "\<Up>"
"inoremap <expr> <PageDown> pumvisible() ? "\<PageDown>\<C-p>\<C-n>" : "\<PageDown>"
"inoremap <expr> <PageUp> pumvisible() ? "\<PageUp>\<C-p>\<C-n>" : "\<PageUp>"
"let g:ycm_key_list_select_completion=['<c-n>']
"let g:ycm_key_list_select_completion = ['<Down>']
"let g:ycm_key_list_previous_completion=['<c-p>']
"let g:ycm_key_list_previous_completion = ['<Up>']
"let g:ycm_confirm_extra_conf=0
"let g:ycm_collect_identifiers_from_tags_files=1
"let g:ycm_min_num_of_chars_for_completion=2
"let g:ycm_cache_omnifunc=0
"let g:ycm_seed_identifiers_with_syntax=1
"nnoremap <F5> :YcmForceCompileAndDiagnostics<CR>
""nnoremap <leader>lo :lopen<CR>
""nnoremap <leader>lc :lclose<CR>
"inoremap <leader><leader> <C-x><C-o>
let g:ycm_complete_in_comments = 1
let g:ycm_complete_in_strings = 1
let g:ycm_collect_identifiers_from_comments_and_strings = 0
"------------------------------------------------------------------------

"--------------------------------vim-fugitive----------------------------
" Help to show branch of vim-airline.
Bundle "tpope/vim-fugitive"
"------------------------------------------------------------------------

"--------------------------------SimpylFold------------------------------
" Enable folding.
Bundle "tmhedberg/SimpylFold"
let g:SimpylFold_docstring_preview=1
set foldlevelstart=99
"set foldenable
"set foldcolumn=0
"set foldclose=all
"set foldmethod=indent
"set foldlevel=99
nnoremap <space> za<CR>
nnoremap <C-O> zR<CR>
nnoremap <C-G> zM<CR>
"------------------------------------------------------------------------

"--------------------------------indentpython.vim------------------------
Bundle "vim-scripts/indentpython.vim"
"------------------------------------------------------------------------

"------------------------------vim-vue-----------------------------------
Bundle 'posva/vim-vue'
"------------------------------------------------------------------------

"-------------------------------vim-go-----------------------------------
Bundle 'fatih/vim-go'
"------------------------------------------------------------------------

"----------------------------tabnine-vim---------------------------------
Bundle 'zxqfl/tabnine-vim'
"------------------------------------------------------------------------

"----------------------------typescript-vim------------------------------
Bundle 'leafgarland/typescript-vim'
"------------------------------------------------------------------------

"--------------------------------syntastic-------------------------------
"Bundle "vim-syntastic/syntastic"
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*
"let g:syntastic_always_populate_loc_list=1
"let g:syntastic_auto_loc_list=1
"let g:syntastic_check_on_open=1
"let g:syntastic_check_on_wq=0
"let g:syntastic_python_checkers=['pylint']
"let g:syntastic_python_pylint_args='--disable=C0111,R0903,C0301'
"nnoremap <C-M> :SyntasticToggleMode<CR>
"------------------------------------------------------------------------

" All of your Plugins must be added before the following line.
call vundle#end()

" Required.
filetype plugin indent on
" To ignore plugin indent changes, instead use:
filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
